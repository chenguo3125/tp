@startuml
skinparam ArrowFontStyle plain

'— Participants grouped in boxes —
box "Model"
participant ":ModelManager" as ModelManager
participant ":VersionedAddressBook" as VersionedAddressBook
participant ":AddressBook" as AddressBook
end box

box "Filtered Lists"
participant ":FilteredPersonList" as FilteredPersons
participant ":FilteredEventList" as FilteredEvents
participant ":FilteredTaskList" as FilteredTasks
end box

actor Client

Client -> ModelManager : undo()
activate ModelManager

ModelManager -> VersionedAddressBook : undo()
activate VersionedAddressBook

alt addressBookStateHistory is empty
    VersionedAddressBook --> ModelManager : false
    ModelManager --> Client : false
    deactivate ModelManager
    deactivate VersionedAddressBook
else addressBookStateHistory is not empty
    VersionedAddressBook -> VersionedAddressBook : save current state to redo history
    VersionedAddressBook -> VersionedAddressBook : pop previous state from undo history
    VersionedAddressBook -> AddressBook : resetData(previousState)
    activate AddressBook
    AddressBook --> VersionedAddressBook
    deactivate AddressBook
    VersionedAddressBook --> ModelManager : true
    deactivate VersionedAddressBook

    alt undo was successful
        ModelManager -> FilteredPersons : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)
        activate FilteredPersons
        FilteredPersons --> ModelManager
        deactivate FilteredPersons

        ModelManager -> FilteredEvents : updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS)
        activate FilteredEvents
        FilteredEvents --> ModelManager
        deactivate FilteredEvents

        ModelManager -> FilteredTasks : updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS)
        activate FilteredTasks
        FilteredTasks --> ModelManager
        deactivate FilteredTasks
    end
    ModelManager --> Client : boolean result
    deactivate ModelManager
end
@enduml
