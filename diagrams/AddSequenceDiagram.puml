@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AddCommandParser" as AddCommandParser LOGIC_COLOR
participant "a:AddCommand" as AddCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
participant ":AddressBook" as AddressBook MODEL_COLOR
participant ":UniquePersonList" as UniquePersonList MODEL_COLOR
end box

box Storage STORAGE_COLOR_T1
participant ":Storage" as Storage STORAGE_COLOR
end box

[-> LogicManager : execute("add n/John...")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("add n/John...")
activate AddressBookParser

create AddCommandParser
AddressBookParser -> AddCommandParser
activate AddCommandParser

AddCommandParser --> AddressBookParser
deactivate AddCommandParser

AddressBookParser -> AddCommandParser : parse("n/John...")
activate AddCommandParser

create AddCommand
AddCommandParser -> AddCommand
activate AddCommand

AddCommand --> AddCommandParser
deactivate AddCommand

AddCommandParser --> AddressBookParser : a
deactivate AddCommandParser

AddressBookParser --> LogicManager : a
deactivate AddressBookParser

LogicManager -> Model : commit()
activate Model
Model --> LogicManager
deactivate Model

LogicManager -> AddCommand : execute(m)
activate AddCommand

AddCommand -> Model : hasStudentNumber(studentNumber)
activate Model
Model --> AddCommand : boolean
deactivate Model

alt duplicate student number
    AddCommand --> LogicManager : throw CommandException
else
    AddCommand -> Model : addPerson(person)
    activate Model

    Model -> AddressBook : addPerson(person)
    activate AddressBook

    AddressBook -> UniquePersonList : add(person)
    activate UniquePersonList
    UniquePersonList --> AddressBook
    deactivate UniquePersonList

    AddressBook --> Model
    deactivate AddressBook

    Model --> AddCommand
    deactivate Model

    create CommandResult
    AddCommand -> CommandResult
    activate CommandResult

    CommandResult --> AddCommand
    deactivate CommandResult

    AddCommand --> LogicManager : r
end

deactivate AddCommand

LogicManager -> Storage : saveAddressBook(model.getAddressBook())
activate Storage
Storage --> LogicManager
deactivate Storage

[<--LogicManager : r
deactivate LogicManager
@enduml

